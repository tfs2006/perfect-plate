# Perfect-Plate Environment Variables Configuration
# Copy this file to .env for local development or set these in Netlify dashboard
# 
# SECURITY NOTE: Never commit actual credentials to version control.
# Use Netlify environment variables for production secrets.

# ===== AUTHENTICATION =====

# For Vertex AI (Google Cloud) - REQUIRED when using GEMINI_API_ENDPOINT=vertex
# Get these from Google Cloud Console → IAM & Admin → Service Accounts
# 1. Create a service account with Vertex AI User role
# 2. Create a JSON key and extract the client_email and private_key
# 3. Set them as environment variables below
# 4. These credentials will be used to generate OAuth2 Bearer tokens with scope:
#    https://www.googleapis.com/auth/cloud-platform

# Service Account Email
GOOGLE_CLIENT_EMAIL=your-service-account@your-project.iam.gserviceaccount.com

# Service Account Private Key (the entire key from the JSON file)
# Note: In Netlify, paste the raw key with literal \n characters (they will be replaced in code)
# Example format: -----BEGIN PRIVATE KEY-----\nMIIEvQI...\n-----END PRIVATE KEY-----\n
GOOGLE_PRIVATE_KEY=-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY_HERE\n-----END PRIVATE KEY-----\n

# For Generative Language API (Google AI Studio) - REQUIRED when using GEMINI_API_ENDPOINT=generativelanguage
# Get your API key from: https://aistudio.google.com/app/apikey
# This is optional if you're using Vertex AI with service account credentials
GEMINI_API_KEY=your_api_key_here

# ===== OPTIONAL =====

# API Endpoint Type (OPTIONAL)
# Controls which Google API endpoint to use
# Options:
#   - "generativelanguage" - Use Google's Generative Language API
#     URL: https://generativelanguage.googleapis.com/v1/models/
#   - "vertex" or "vertexai" (default) - Use Google Cloud Vertex AI API
#     URL: https://aiplatform.googleapis.com/v1/publishers/google/models/
# 
# Default: "vertex" (Vertex AI endpoint)
GEMINI_API_ENDPOINT=vertex

# Gemini Model (OPTIONAL)
# Specify which Gemini model to use
# Available model for this configuration:
#   - gemini-2.5-pro (recommended - only model available with current API key)
#
# Default behavior:
#   - If GEMINI_MODEL is set, it overrides the frontend's model choice
#   - If not set, the frontend uses gemini-2.5-pro
#   - This allows you to switch models without changing frontend code
#
# Note: Model availability depends on your API key and endpoint type
# This configuration is restricted to gemini-2.5-pro due to API key limitations
GEMINI_MODEL=gemini-2.5-pro

# Allowed Origins for CORS (OPTIONAL)
# Comma-separated list of allowed origins for CORS
# Use "*" to allow all origins (not recommended for production)
# Examples:
#   - "*" (allow all)
#   - "https://yourdomain.github.io"
#   - "https://yourdomain.github.io,https://yourdomain.com"
#
# Default: "*"
ALLOWED_ORIGIN=*

# ===== EXAMPLES =====

# Example 1: Using Vertex AI with Service Account (OAuth2)
# GOOGLE_CLIENT_EMAIL=my-service-account@my-project.iam.gserviceaccount.com
# GOOGLE_PRIVATE_KEY=-----BEGIN PRIVATE KEY-----\nMIIEv...\n-----END PRIVATE KEY-----\n
# GEMINI_API_ENDPOINT=vertex
# GEMINI_MODEL=gemini-2.5-pro

# Example 2: Using Generative Language API (Google AI Studio)
# GEMINI_API_KEY=AIzaSyC...your_key_here
# GEMINI_API_ENDPOINT=generativelanguage
# GEMINI_MODEL=gemini-2.5-pro

# ===== NETLIFY CONFIGURATION =====
# To set these in Netlify:
# 1. Go to your Netlify site dashboard (https://app.netlify.com)
# 2. Navigate to: Site settings → Environment variables
# 3. Click "Add a variable" or "Add a single variable"
# 4. For Vertex AI, add:
#    - GOOGLE_CLIENT_EMAIL = your-service-account@project.iam.gserviceaccount.com
#    - GOOGLE_PRIVATE_KEY = (paste the entire private key with \n characters)
#    - GEMINI_API_ENDPOINT = vertex
#    - GEMINI_MODEL = gemini-2.5-pro
# 5. For Generative Language API, add:
#    - GEMINI_API_KEY = AIzaSyC...your_key_here
#    - GEMINI_API_ENDPOINT = generativelanguage
#    - GEMINI_MODEL = gemini-2.5-pro
# 6. Click "Save" and redeploy your site
#
# Note: Changes to environment variables require a redeploy to take effect.
# You can trigger a redeploy from: Deploys → Trigger deploy → Deploy site
#
# ===== VERTEX AI SETUP =====
# For Vertex AI configuration with OAuth2 authentication:
# 1. Go to Google Cloud Console: https://console.cloud.google.com/
# 2. Enable the Vertex AI API for your project
# 3. Create a Service Account:
#    - Go to IAM & Admin → Service Accounts
#    - Click "Create Service Account"
#    - Give it a name and description
#    - Grant it the "Vertex AI User" role
#    - Click "Done"
# 4. Create a JSON key for the service account:
#    - Click on the service account
#    - Go to "Keys" tab
#    - Click "Add Key" → "Create new key" → "JSON"
#    - Download the JSON file
# 5. Extract credentials from the JSON file:
#    - Copy the "client_email" value to GOOGLE_CLIENT_EMAIL
#    - Copy the "private_key" value to GOOGLE_PRIVATE_KEY
#    - Note: Keep the \n characters as literal text when pasting into Netlify
# 6. Set environment variables in Netlify as described above
# 7. The endpoint will be: https://aiplatform.googleapis.com/v1/publishers/google/models/
# 8. Recommended model: gemini-2.5-pro (latest Vertex Gemini model)
# 9. Reference: https://cloud.google.com/docs/authentication/getting-started

# ===== TROUBLESHOOTING =====
# - If you get authentication errors with Vertex AI, verify service account credentials
# - If you get "MODEL_NOT_FOUND" errors, use the health-check endpoint to verify
# - Access health check at: https://your-site.netlify.app/.netlify/functions/health-check
# - Use list-models endpoint to see available models: /.netlify/functions/list-models
# - See README.md for detailed troubleshooting steps
